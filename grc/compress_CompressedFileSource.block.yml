# auto-generated by grc.converter

id: compress_CompressedFileSource
label: Compressed File Source
category: '[Compression]'

parameters:
-   id: filename
    label: File
    dtype: file_open
-   id: type
    label: Output Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: repeat
    label: Repeat
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: begin_tag
    label: Add begin tag
    dtype: raw
    default: pmt.PMT_NIL

outputs:
-   domain: stream
    dtype: ${ type }

templates:
    imports: |-
        import compress
        import pmt
    make: |-
        compress.CompressedFileSource(${type.size}, ${filename}, ${repeat})
        self.${id}.set_begin_tag(${begin_tag})
    callbacks:
    - open(${file}, ${repeat})
    - self.${id}.set_begin_tag(${begin_tag})

documentation: |-
    This block will read a file compressed with Compressed File Sink and output the decompressed data as the indicated data type.

file_format: 1
